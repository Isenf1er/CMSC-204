import java.util.ArrayList;

public class GradeBook
{
   private double[] scores;
   private int scoresSize;

   /**
      Constructs a gradebook with no scores and a given capacity.
      @capacity the maximum number of scores in this gradebook
   */
   public GradeBook(int capacity)
   {
      scores = new double[capacity];
      scoresSize = 0;
   }

   /**
      Adds a score to this gradebook.
      @param score the score to add
      @return true if the score was added, false if the gradebook is full
   */
   public boolean addScore(double score)
   {
      if (scoresSize < scores.length)
      {
         scores[scoresSize] = score;
         scoresSize++;
         return true;
      }
      else
         return false;      
   }

   /**
      Computes the sum of the scores in this gradebook.
      @return the sum of the scores
   */
   public double sum()
   {
      double total = 0;
      for (int i = 0; i < scoresSize; i++)
      {
         total = total + scores[i];
      }
      return total;
   }
      
   /**
      Gets the minimum score in this gradebook.
      @return the minimum score, or 0 if there are no scores.
   */
   public double minimum()
   {
      if (scoresSize == 0) return 0;
      double smallest = scores[0];
      for (int i = 1; i < scoresSize; i++)
      {
         if (scores[i] < smallest)
         {
            smallest = scores[i];
         }
      }
      return smallest;
   }

   /**
      Gets the final score for this gradebook.
      @return the sum of the scores, with the lowest score dropped if 
      there are at least two scores, or 0 if there are no scores.
   */
   public double finalScore() 
   {
      if (scoresSize == 0)
         return 0;
      else if (scoresSize == 1)
         return scores[0];
      else
         return sum() - minimum();
   }
   
   public int getScoreSize() {
	   return scoresSize;
   }
   
   public String toString() {
	   String scoreToString = "";
	   for (int i = 0; i < scoresSize; i++) {
		   scoreToString += Double.toString(scores[i]) + " ";
	   }
	   return scoreToString;
   }
}
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class GradeBookTest {

	private GradeBook gradeBook1;
	private GradeBook gradeBook2;
	
	@BeforeEach
	void setUp() throws Exception {
		gradeBook1 = new GradeBook(5);
		gradeBook2 = new GradeBook(5);
		
		gradeBook1.addScore(80);
		gradeBook1.addScore(70);
		gradeBook2.addScore(64);
		gradeBook2.addScore(99);
	}

	@AfterEach
	void tearDown() throws Exception {
		gradeBook1 = null;
		gradeBook2 = null;
	}

	@Test
	void testAddScore() {
		assertTrue((gradeBook1.toString()).equals("80.0 70.0 "));
		assertTrue((gradeBook2.toString()).equals("64.0 99.0 "));
		
		assertEquals(2, gradeBook1.getScoreSize());
		assertEquals(2, gradeBook2.getScoreSize());
	}

	@Test
	void testSum() {
		assertEquals(150, gradeBook1.sum());
		assertEquals(163, gradeBook2.sum());
	}

	@Test
	void testMinimum() {
		assertEquals(70, gradeBook1.minimum());
		assertEquals(64, gradeBook2.minimum());
	}

	@Test
	void testFinalScore() {
		assertEquals(80, gradeBook1.finalScore());
		assertEquals(99, gradeBook2.finalScore());
	}

}
